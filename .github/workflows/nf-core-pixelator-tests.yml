#schema: https://github.com/softprops/github-actions-schemas/blob/master/workflow.json
name: "nf-core/pixelator integration tests"

on:
  workflow_dispatch:
  pull_request:


permissions:
  id-token: write
  actions: write
  contents: read
  packages: write


env:
  ANNOY_COMPILER_ARGS: "-DANNOYLIB_MULTITHREADED_BUILD,-mno-avx512f"

jobs:
  pre_job:
    continue-on-error: true
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        if: ${{ !github.event.act }}
        with:
          concurrent_skipping: "same_content_newer"
          skip_after_successful_duplicate: "true"
          do_not_skip: '["workflow_dispatch"]'
          paths_filter: |
            python:
              paths:
                - 'pyproject.toml'
                - 'poetry.lock'
                - 'src/pixelator/**'
              paths_ignore:
                - 'tests/**'

  test:
    name: Test default profile
    if: needs.pre_job.outputs.should_skip == '{}' || !fromJSON(needs.pre_job.outputs.paths_result).python.should_skip
    runs-on: ubuntu-latest
    needs: [pre_job]
    steps:
      - name: Checkout pixelator
        uses: actions/checkout@4
        with:
          path: pixelator

      - name: Checkout nf-core-pixelator
        uses: actions/checkout@v4
        with:
          repository: pixelgentechnologies/nf-core-pixelator
          path: nf-core-pixelator

      - uses: nf-core/setup-nextflow@v1
      - uses: zendesk/setup-task@v2

      - name: Set up Python environment
        uses: ./.github/actions/setup-python
        with:
          python-version: 3.11

      - uses: supplypike/setup-bin@v3
        with:
          uri: 'https://opengene.org/fastp/fastp'
          name: 'fastp'
          version: '0.23.4'

      - name: Install poetry
        run: |
          python -m pip install --user pipx
          python -m pipx ensurepath
          pipx install poetry

      - name: Install pixelator
        working-directory: pixelator
        run: |
          poetry config virtualenvs.create false
          poetry install

      - name: Run nf-core default profile using Task
        run: |
          PIPELINE_BRANCH=pixelator-next PIPELINE_SOURCE_DIR=nf-core-pixelator task test-nf-core-pixelator
