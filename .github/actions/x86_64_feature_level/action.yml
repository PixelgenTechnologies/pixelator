name: "x86-64-feature-level"
description: "Detect the feature level from /proc/cpuinfo output"
inputs: {}
outputs:
  level:
    description: "The x86_64 feature level"
    value: ${{ steps.determine_level.outputs.level }}
runs:
  using: "composite"
  steps:
    - name: Create the script
      uses: "DamianReeves/write-file-action@master"
      with:
        path: x86_64_feature_level.sh
        write-mode: overwrite
        contents: |
          #!/bin/sh -eu
          verbose=""
          flags=$(grep '^flags\b' </proc/cpuinfo | head -n 1)
          flags=" ${flags#*:} "

          has_flags () {
            for flag; do
              case "$flags" in
                *" $flag "*) :;;
                *)
                  if [ -n "$verbose" ]; then
                    echo >&2 "Missing $flag for the next level"
                  fi
                  return 1;;
              esac
            done
          }

          determine_level () {
            level=0
            has_flags lm cmov cx8 fpu fxsr mmx syscall sse2 || return 0
            level=1
            has_flags cx16 lahf_lm popcnt sse4_1 sse4_2 ssse3 || return 0
            level=2
            has_flags avx avx2 bmi1 bmi2 f16c fma abm movbe xsave || return 0
            level=3
            has_flags avx512f avx512bw avx512cd avx512dq avx512vl || return 0
            level=4
          }

          determine_level
          echo "$level"

    - name: Run the script
      shell: bash
      id: determine_level
      run: |
        chmod +x x86_64_feature_level.sh
        level="$(./x86_64_feature_level.sh)"
        echo "level=${level}" >> $GITHUB_OUTPUT

    - name: Remove temporary files
      shell: bash
      run: |
        rm x86_64_feature_level.sh
