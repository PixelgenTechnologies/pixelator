name: "build-dev-image"
description: "Build a dev image and push it to the Pixelgen container registries"
inputs:
  cache-from:
    description: "The cache to use for the build"
    default: ""
  cache-to:
    description: "The cache to push to for the build"
    default: ""
  platforms:
    description: "The platforms to build for (seperated by comma) - defaults to linux/amd64/v3"
    default: linux/amd64/v3

outputs:
  tags:
    description: "All tags that were pushed"
    value: ${{ steps.meta.outputs.tags }}

runs:
  using: "composite"
  steps:
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/pixelgentechnologies/pixelator
          890888997283.dkr.ecr.eu-north-1.amazonaws.com/pixelator
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha

    - name: Build input options
      id: build_input_options
      uses: actions/github-script@v7
      with:
        script: |
          const shaShort = context.sha.substring(0, 7)
          const inputParams = ${{ toJSON(inputs) }}

          const cacheFromArray = inputParams["cache-from"].split('\n').map((line) => line.trim())
            .filter((line) => line !== "")
            .map((line) => "*.cache-from=" + line)

          const cacheToArray = inputParams["cache-to"].split('\n').map((line) => line.trim())
            .filter((line) => line !== "")
            .map((line) => "*.cache-to=" + line)

          const platformArray = inputParams["platforms"].split(',').map((line) => line.trim())
            .filter((line) => line !== "")
            .map((line) => "*.platform=" + line)

          let bakeSetCommands = []
          bakeSetCommands.push(...cacheFromArray)
          bakeSetCommands.push(...cacheToArray)
          bakeSetCommands.push(...platformArray)

          # Override the version in the container if we are run in a version tag push event
          if ( context.eventName === "push" && github.ref.startsWith('refs/tags/v') ) {
            bakeSetCommands.push("*.args.VERSION_OVERRIDE=" + "${{ steps.meta.outputs.version }}" )
          }

          bakeSetCommandsText = bakeSetCommands.join('\n')
          core.setOutput('set', bakeSetCommandsText)

    - name: Build and push to ghcr and ecr
      uses: docker/bake-action@v4
      with:
        files: |
          ./docker-bake.hcl
          ${{ steps.meta.outputs.bake-file }}

        push: true
        targets: pixelator-prod-ci
        provenance: false
        set: ${{ steps.build_input_options.outputs.set }}
